-- MySQL Script generated by MySQL Workbench
-- Wed Sep 18 18:37:02 2024
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema hotel_management
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema hotel_management
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `hotel_management` DEFAULT CHARACTER SET utf8 ;
USE `hotel_management` ;

-- -----------------------------------------------------
-- Table `hotel_management`.`Room`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`Room` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`Room` (
  `room_id` INT NULL,
  `room_type` VARCHAR(50) NULL,
  `status` VARCHAR(20) NULL,
  `price_per_night` INT NULL,
  `special_amenities` VARCHAR(100) NULL,
  PRIMARY KEY (`room_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`Patient`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`Patient` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`Patient` (
  `patientID` INT NULL,
  `fistName` VARCHAR(45) NULL,
  `lastName` VARCHAR(45) NULL,
  `address` VARCHAR(45) NULL,
  `` INT NULL,
  `telephone` VARCHAR(45) NULL,
  `` VARCHAR(45) NULL,
  PRIMARY KEY (`patientID`),
  INDEX `fk_Customer_Vehicle_idx` (`` ASC) VISIBLE,
  CONSTRAINT `fk_Customer_Vehicle`
    FOREIGN KEY (``)
    REFERENCES `hotel_management`.`Room` (`room_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`Customer`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`Customer` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`Customer` (
  `DoctorID` INT NULL,
  `first_name` VARCHAR(45) NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `speciailization` VARCHAR(45) NOT NULL,
  `customer_id` INT NULL,
  `first_name` VARCHAR(50) NULL,
  `last_name` VARCHAR(50) NULL,
  `phone_number` VARCHAR(15) NULL,
  `email` VARCHAR(100) NULL,
  PRIMARY KEY (`DoctorID`, `customer_id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`Employee`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`Employee` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`Employee` (
  `EmployeeID` INT NULL,
  `surName` VARCHAR(45) NULL,
  `firstName` VARCHAR(45) NULL,
  `position` VARCHAR(45) NULL,
  `date-of-employee` VARCHAR(45) NULL,
  `telephone` VARCHAR(45) NULL,
  `Repair_RepairID` INT NOT NULL,
  `partUsed_partID` INT NOT NULL,
  PRIMARY KEY (`EmployeeID`, `Repair_RepairID`, `partUsed_partID`),
  INDEX `fk_Employee_Repair1_idx` (`Repair_RepairID` ASC) VISIBLE,
  INDEX `fk_Employee_partUsed1_idx` (`partUsed_partID` ASC) VISIBLE,
  CONSTRAINT `fk_Employee_Repair1`
    FOREIGN KEY (`Repair_RepairID`)
    REFERENCES `hotel_management`.`Service` (`service_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Employee_partUsed1`
    FOREIGN KEY (`partUsed_partID`)
    REFERENCES `hotel_management`.`Customer` (`DoctorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`Service`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`Service` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`Service` (
  `Type-of-dataID` INT NULL,
  `date` VARCHAR(45) NULL,
  `cost` VARCHAR(45) NULL,
  `vehicle` VARCHAR(45) NULL,
  `partUsed_partID` INT NOT NULL,
  PRIMARY KEY (`Type-of-dataID`, `partUsed_partID`),
  INDEX `fk_Service_partUsed1_idx` (`partUsed_partID` ASC) VISIBLE,
  CONSTRAINT `fk_Service_partUsed1`
    FOREIGN KEY (`partUsed_partID`)
    REFERENCES `hotel_management`.`Customer` (`DoctorID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`Vehicle_has_Vehicle`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`Vehicle_has_Vehicle` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`Vehicle_has_Vehicle` (
  `Vehicle_Customer_CustomerID` INT NOT NULL,
  `Vehicle_Customer_CustomerID1` INT NOT NULL,
  PRIMARY KEY (`Vehicle_Customer_CustomerID`, `Vehicle_Customer_CustomerID1`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`Reservation`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`Reservation` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`Reservation` (
  `reservation_id` INT NULL,
  `room_id` INT NULL,
  `customer_id` INT NULL,
  `arrival_date` DATE NULL,
  `departure_date` DATE NULL,
  `special_preferences` VARCHAR(200) NULL,
  `status` VARCHAR(20) NULL,
  `Room_room_id` INT NOT NULL,
  `Customer_DoctorID` INT NOT NULL,
  `Customer_customer_id` INT NOT NULL,
  PRIMARY KEY (`reservation_id`, `Room_room_id`, `Customer_DoctorID`, `Customer_customer_id`),
  INDEX `fk_Service_has_Vehicle_Service1_idx` (`reservation_id` ASC, `room_id` ASC) VISIBLE,
  INDEX `fk_Reservation_Room1_idx` (`Room_room_id` ASC) VISIBLE,
  INDEX `fk_Reservation_Customer1_idx` (`Customer_DoctorID` ASC, `Customer_customer_id` ASC) VISIBLE,
  CONSTRAINT `fk_Service_has_Vehicle_Service1`
    FOREIGN KEY (`reservation_id` , `room_id`)
    REFERENCES `hotel_management`.`Service` (`Type-of-dataID` , `partUsed_partID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reservation_Room1`
    FOREIGN KEY (`Room_room_id`)
    REFERENCES `hotel_management`.`Room` (`room_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Reservation_Customer1`
    FOREIGN KEY (`Customer_DoctorID` , `Customer_customer_id`)
    REFERENCES `hotel_management`.`Customer` (`DoctorID` , `customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`table1`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`table1` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`table1` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`ServiceBooking`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`ServiceBooking` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`ServiceBooking` (
  `idServiceBooking` INT NULL,
  `customer_id` INT NULL,
  `reservation_id` INT NULL,
  `booking_time` DATETIME NULL,
  `Customer_DoctorID` INT NOT NULL,
  `Customer_customer_id` INT NOT NULL,
  `Service_service_id` INT NOT NULL,
  PRIMARY KEY (`idServiceBooking`, `Customer_DoctorID`, `Customer_customer_id`, `Service_service_id`),
  INDEX `fk_ServiceBooking_Customer1_idx` (`Customer_DoctorID` ASC, `Customer_customer_id` ASC) VISIBLE,
  INDEX `fk_ServiceBooking_Service1_idx` (`Service_service_id` ASC) VISIBLE,
  CONSTRAINT `fk_ServiceBooking_Customer1`
    FOREIGN KEY (`Customer_DoctorID` , `Customer_customer_id`)
    REFERENCES `hotel_management`.`Customer` (`DoctorID` , `customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ServiceBooking_Service1`
    FOREIGN KEY (`Service_service_id`)
    REFERENCES `hotel_management`.`Service` (`service_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`Invoice`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`Invoice` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`Invoice` (
  `invoice_id` INT NULL,
  `invoice_id` INT NULL,
  `total_amount` INT NULL,
  `tax_amount` INT NULL,
  `status` VARCHAR(45) NULL,
  `Reservation_reservation_id` INT NOT NULL,
  `Reservation_Room_room_id` INT NOT NULL,
  `Reservation_Customer_DoctorID` INT NOT NULL,
  `Reservation_Customer_customer_id` INT NOT NULL,
  PRIMARY KEY (`invoice_id`, `Reservation_reservation_id`, `Reservation_Room_room_id`, `Reservation_Customer_DoctorID`, `Reservation_Customer_customer_id`),
  INDEX `fk_Invoice_Reservation1_idx` (`Reservation_reservation_id` ASC, `Reservation_Room_room_id` ASC, `Reservation_Customer_DoctorID` ASC, `Reservation_Customer_customer_id` ASC) VISIBLE,
  CONSTRAINT `fk_Invoice_Reservation1`
    FOREIGN KEY (`Reservation_reservation_id` , `Reservation_Room_room_id` , `Reservation_Customer_DoctorID` , `Reservation_Customer_customer_id`)
    REFERENCES `hotel_management`.`Reservation` (`reservation_id` , `Room_room_id` , `Customer_DoctorID` , `Customer_customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`Payment`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`Payment` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`Payment` (
  `payment_id` INT NULL,
  `invoice_id` INT NULL,
  `payment_method` VARCHAR(45) NULL,
  `amount_paid` VARCHAR(45) NULL,
  `Paymentcol` INT NULL,
  `payment_date` DATETIME NULL,
  `Invoice_invoice_id` INT NOT NULL,
  `Invoice_Reservation_reservation_id` INT NOT NULL,
  `Invoice_Reservation_Room_room_id` INT NOT NULL,
  `Invoice_Reservation_Customer_DoctorID` INT NOT NULL,
  `Invoice_Reservation_Customer_customer_id` INT NOT NULL,
  PRIMARY KEY (`payment_id`, `Invoice_invoice_id`, `Invoice_Reservation_reservation_id`, `Invoice_Reservation_Room_room_id`, `Invoice_Reservation_Customer_DoctorID`, `Invoice_Reservation_Customer_customer_id`),
  INDEX `fk_Payment_Invoice1_idx` (`Invoice_invoice_id` ASC, `Invoice_Reservation_reservation_id` ASC, `Invoice_Reservation_Room_room_id` ASC, `Invoice_Reservation_Customer_DoctorID` ASC, `Invoice_Reservation_Customer_customer_id` ASC) VISIBLE,
  CONSTRAINT `fk_Payment_Invoice1`
    FOREIGN KEY (`Invoice_invoice_id` , `Invoice_Reservation_reservation_id` , `Invoice_Reservation_Room_room_id` , `Invoice_Reservation_Customer_DoctorID` , `Invoice_Reservation_Customer_customer_id`)
    REFERENCES `hotel_management`.`Invoice` (`invoice_id` , `Reservation_reservation_id` , `Reservation_Room_room_id` , `Reservation_Customer_DoctorID` , `Reservation_Customer_customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `hotel_management`.`Feedback`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `hotel_management`.`Feedback` ;

CREATE TABLE IF NOT EXISTS `hotel_management`.`Feedback` (
  `feedback_id` INT NULL,
  `reservation_id` INT NULL,
  `rating` INT NULL,
  `comments` VARCHAR(245) NULL,
  `feedback_date` DATE NULL,
  `Reservation_reservation_id` INT NOT NULL,
  `Reservation_Room_room_id` INT NOT NULL,
  `Reservation_Customer_DoctorID` INT NOT NULL,
  `Reservation_Customer_customer_id` INT NOT NULL,
  PRIMARY KEY (`feedback_id`, `Reservation_reservation_id`, `Reservation_Room_room_id`, `Reservation_Customer_DoctorID`, `Reservation_Customer_customer_id`),
  INDEX `fk_Feedback_Reservation1_idx` (`Reservation_reservation_id` ASC, `Reservation_Room_room_id` ASC, `Reservation_Customer_DoctorID` ASC, `Reservation_Customer_customer_id` ASC) VISIBLE,
  CONSTRAINT `fk_Feedback_Reservation1`
    FOREIGN KEY (`Reservation_reservation_id` , `Reservation_Room_room_id` , `Reservation_Customer_DoctorID` , `Reservation_Customer_customer_id`)
    REFERENCES `hotel_management`.`Reservation` (`reservation_id` , `Room_room_id` , `Customer_DoctorID` , `Customer_customer_id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
